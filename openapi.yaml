openapi: 3.0.3
info:
  title: PropulsionAI API
  description: API for interacting with PropulsionAI models and tools.
  version: 1.0.0
  contact:
    name: PropulsionAI Support Team
    email: dev-support@propulsionhq.com
servers:
  - url: https://api.propulsionhq.com/api/v1
    description: PropulsionAI Production Server (Deprecated)
  - url: https://api.propulsionhq.com/api/v2
    description: PropulsionAI Production Server

tags:
  - name: Chat
    description: Given a list of messages comprising a conversation, the model will return a response.

paths:
  /chat/completions:
    post:
      summary: Call a deployment endpoint with specified tools and messages.
      security:
        - bearerAuth: []
      tags:
        - Chat
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRequest'
      responses:
        '200':
          description: Successful response
          headers:
            X-TASK-ID:
              schema:
                type: string
            X-POLLING-ID:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelRunResponse'
            text/event-stream:
              schema:
                type: string
                format: binary
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer

  schemas:
    ChatRequest:
      type: object
      properties:
        tools:
          type: array
          items:
            $ref: '#/components/schemas/ChatCompletionTool'
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
        deployment:
          type: string
        stream:
          type: boolean
          default: false
        temperature:
          $ref: '#/components/schemas/Temperature'
        top_p:
          $ref: '#/components/schemas/TopP'
        n:
          $ref: '#/components/schemas/N'
        max_tokens:
          type: integer
        tool_choice:
          $ref: '#/components/schemas/ChatCompletionToolChoiceOption'
        knowledgebases:
          type: array
          items:
            type: string
        task_id:
          type: string
      required:
        - messages
        - deployment

    Message:
      type: object
      properties:
        role:
          type: string
          enum: [system, user, assistant, tool]
        content:
          type: string

    ChatCompletionTool:
      type: object
      properties:
        type:
          type: string
          enum: ['function']
        function:
          $ref: '#/components/schemas/FunctionObject'
      required:
        - type
        - function

    FunctionObject:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
          pattern: ^[a-zA-Z0-9_-]{1,64}$
        parameters:
          type: object
          additionalProperties: true
      required:
        - name

    ChatCompletionToolChoiceOption:
      oneOf:
        - type: string
          enum: [none, auto, required]
        - $ref: '#/components/schemas/ChatCompletionNamedToolChoice'

    ChatCompletionNamedToolChoice:
      type: object
      properties:
        type:
          type: string
          enum: ['function']
        function:
          $ref: '#/components/schemas/FunctionObject'
      required:
        - type
        - function

    Temperature:
      type: number
      minimum: 0
      maximum: 1
      default: 0.4

    TopP:
      type: number
      minimum: 0
      maximum: 1
      default: 0.5
      description: Probability threshold for token selection in text generation, controlling output randomness.

    N:
      type: integer
      minimum: 1
      maximum: 128
      default: 1

    ModelRunResponse:
      type: object
      properties:
        id:
          type: string
        object:
          type: string
        created:
          type: integer
        model:
          type: string
        choices:
          type: array
          items:
            $ref: '#/components/schemas/Choice'
        usage:
          $ref: '#/components/schemas/Usage'
        tool_calls:
          type: array
          items:
            $ref: '#/components/schemas/ToolCall'

    Choice:
      type: object
      properties:
        index:
          type: integer
        message:
          $ref: '#/components/schemas/Message'

    Usage:
      type: object
      properties:
        prompt_tokens:
          type: integer
        completion_tokens:
          type: integer
        total_tokens:
          type: integer

    ToolCall:
      type: object
      properties:
        type:
          type: string
          enum: ['function']
        function:
          $ref: '#/components/schemas/FunctionObject'

security:
  - bearerAuth: []
