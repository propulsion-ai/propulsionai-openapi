openapi: 3.0.3
info:
  title: PropulsionAI API
  description: API for interacting with PropulsionAI models and tools.
  version: 1.0.0
  contact:
    name: PropulsionAI
servers:
  - url: https://api.propulsionhq.com
    description: PropulsionAI Production Server
tags:
  - name: dataset
    description: Dataset operations
  - name: model
    description: Model operations

paths:
  /api/v1/dataset/{dataset_id}/task:
    post:
      summary: Create a new dataset task
      description: This endpoint creates a new task for the dataset with specific columns.
      tags:
        - dataset
      parameters:
        - name: dataset_id
          in: path
          required: true
          schema:
            type: integer
          example: 123
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                prompt:
                  type: string
                  description: The column name in the dataset containing the prompts.
                  default: instruction
                query:
                  type: string
                  description: The column name in the dataset containing the queries.
                  default: input
                response:
                  type: string
                  description: The column name in the dataset containing the responses.
                  default: output
                history:
                  type: string
                  description: The column name in the dataset containing the histories.
                  default: None
                messages:
                  type: string
                  description: The column name in the dataset containing the messages.
                  default: conversations
                system:
                  type: string
                  description: The column name in the dataset containing the system prompts.
                  default: None
                tools:
                  type: string
                  description: The column name in the dataset containing the tool descriptions.
                  default: None
                images:
                  type: string
                  description: The column name in the dataset containing the image inputs.
                  default: None
                chosen:
                  type: string
                  description: The column name in the dataset containing the chosen answers.
                  default: None
                rejected:
                  type: string
                  description: The column name in the dataset containing the rejected answers.
                  default: None
                kto_tag:
                  type: string
                  description: The column name in the dataset containing the kto tags.
                  default: None
      responses:
        '200':
          description: Task created successfully
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Invalid request payload
        '500':
          description: Internal server error
  /api/v1/{model_id}/run:
    post:
      summary: Run a model with specified tools and messages.
      description: This endpoint runs a model with the specified tools and messages.
      tags:
        - model
      parameters:
        - name: model_id
          in: path
          required: true
          schema:
            type: string
          description: The ID of the model to run.
        - name: wait
          in: query
          required: false
          schema:
            type: boolean
            default: true
          description: Whether to wait for the response or not.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tools:
                  type: array
                  description: >
                    A list of tools the model may call. Currently, only functions are supported as a tool.
                    Use this to provide a list of functions the model may generate JSON inputs for. A max of 128 functions are supported.
                  items:
                    $ref: "#/components/schemas/ChatCompletionTool"
                messages:
                  type: array
                  items:
                    type: object
                    properties:
                      role:
                        type: string
                        enum: [system, user, assistant, tool]
                      content:
                        type: string
                model:
                  type: string
                stream:
                  type: boolean
                temperature:
                  type: number
                  minimum: 0
                  maximum: 2
                  default: 1
                  example: 1
                  nullable: true
                  description: &completions_top_p_description |
                    An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.

                    We generally recommend altering this or `temperature` but not both.
                top_p:
                  type: number
                  minimum: 0
                  maximum: 1
                  default: 1
                  example: 1
                  nullable: true
                  description: &completions_top_p_description |
                    An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.

                    We generally recommend altering this or `temperature` but not both.
                n:
                  type: integer
                  minimum: 1
                  maximum: 128
                  default: 1
                  example: 1
                  nullable: true
                  description: How many chat completion choices to generate for each input message. Note that you will be charged based on the number of generated tokens across all of the choices. Keep `n` as `1` to minimize costs.
                max_tokens:
                  type: integer
                  nullable: true
                  description: |
                    The maximum number of [tokens](/tokenizer) that can be generated in the chat completion.

                    The total length of input tokens and generated tokens is limited by the model's context length. [Example Python code](https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken) for counting tokens.
                tool_choice:
                  $ref: "#/components/schemas/ChatCompletionToolChoiceOption"
              required:
                - messages
                - model
                - stream
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ModelRunResponse"
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      description: Custom bearer token for authorization

  schemas:
    DatasetTaskRequest:
      type: object
      properties:
        dataset_id:
          type: integer
        data:
          type: object
          properties:
            prompt:
              type: string
              description: The column name in the dataset containing the prompts.
              default: instruction
            query:
              type: string
              description: The column name in the dataset containing the queries.
              default: input
            response:
              type: string
              description: The column name in the dataset containing the responses.
              default: output
            history:
              type: string
              description: The column name in the dataset containing the histories.
              default: None
            messages:
              type: string
              description: The column name in the dataset containing the messages.
              default: conversations
            system:
              type: string
              description: The column name in the dataset containing the system prompts.
              default: None
            tools:
              type: string
              description: The column name in the dataset containing the tool descriptions.
              default: None
            images:
              type: string
              description: The column name in the dataset containing the image inputs.
              default: None
            chosen:
              type: string
              description: The column name in the dataset containing the chosen answers.
              default: None
            rejected:
              type: string
              description: The column name in the dataset containing the rejected answers.
              default: None
            kto_tag:
              type: string
              description: The column name in the dataset containing the kto tags.
              default: None

    ChatCompletionTool:
      type: object
      properties:
        type:
          type: string
          enum: ["function"]
          description: The type of the tool. Currently, only `function` is supported.
        function:
          $ref: "#/components/schemas/FunctionObject"
      required:
        - type
        - function

    FunctionObject:
      type: object
      properties:
        description:
          type: string
          description: A description of what the function does, used by the model to choose when and how to call the function.
        name:
          type: string
          description: The name of the function to be called. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64.
        parameters:
          $ref: "#/components/schemas/FunctionParameters"
      additionalProperties: true
      required:
        - name

    ChatCompletionToolChoiceOption:
      description: |
        Controls which (if any) tool is called by the model.
        `none` means the model will not call any tool and instead generates a message.
        `auto` means the model can pick between generating a message or calling one or more tools.
        `required` means the model must call one or more tools.
        Specifying a particular tool via `{"type": "function", "function": {"name": "my_function"}}` forces the model to call that tool.

        `none` is the default when no tools are present. `auto` is the default if tools are present.
      oneOf:
        - type: string
          description: >
            `none` means the model will not call any tool and instead generates a message.
            `auto` means the model can pick between generating a message or calling one or more tools.
            `required` means the model must call one or more tools.
          enum: [none, auto, required]
        - $ref: "#/components/schemas/ChatCompletionNamedToolChoice"
      x-oaiExpandable: true

    FunctionParameters:
      type: object
      description: "The parameters the functions accepts, described as a JSON Schema object. See the [guide](/docs/guides/function-calling) for examples, and the [JSON Schema reference](https://json-schema.org/understanding-json-schema/) for documentation about the format. \n\nOmitting `parameters` defines a function with an empty parameter list."
      additionalProperties: true

    ChatCompletionNamedToolChoice:
      type: object
      properties:
        type:
          type: string
          enum: ["function"]
        function:
          $ref: "#/components/schemas/FunctionObject"
      required:
        - type
        - function

    ModelRunResponse:
      type: object
      properties:
        id:
          type: string
        object:
          type: string
        created:
          type: integer
        model:
          type: string
        choices:
          type: array
          items:
            type: object
            properties:
              index:
                type: integer
              message:
                type: object
                properties:
                  role:
                    type: string
                  content:
                    type: string
        usage:
          type: object
          properties:
            prompt_tokens:
              type: integer
            completion_tokens:
              type: integer
            total_tokens:
              type: integer
        toolCalls:
          type: array
          function:
            type: object
            properties:
              name:
                type: string
              parameters:
                type: object

security:
  - bearerAuth: []
